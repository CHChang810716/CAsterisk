digraph parse_tree
{
  x0x12e6b70 [ label="ROOT" ]
  x0x12e6b70 -> { x0x12e6d20 }
  x0x12e6d20 [ label="catk::syntax::ContextStmts\na = 0i32;\r\nb = 1i32;\r\nc = 2i32;\r\n\r\nr0 = [a,b,c] {\r\n  x = a + b;\r\n  ret x * c;\r\n};\r\n\r\nr1 = if(a) {\r\n  ret b;\r\n} else [c] {\r\n  ret c;\r\n};\r\n\r\naddmul = fn (a, b) [c] {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n};\r\naddmul2 = fn (a, b) {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n};\r\n\r\nret a;" ]
  x0x12e6d20 -> { x0x12e6fe0, x0x8d2de0, x0x8d28d0, x0x8d2570, x0x12e88c0, x0x12e8830, x0x12eba10, x0x8d49b0 }
  x0x12e6fe0 [ label="catk::syntax::AssignStmt\na = 0i32;" ]
  x0x12e6fe0 -> { x0x12e7070, x0x8d24e0 }
  x0x12e7070 [ label="catk::syntax::AssignLeftHand\na" ]
  x0x12e7070 -> { x0x12e7220 }
  x0x12e7220 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x8d24e0 [ label="catk::syntax::IntLiteral\n0i32" ]
  x0x8d24e0 -> { x0x8d2b10, x0x8d2ba0 }
  x0x8d2b10 [ label="catk::syntax::DecIntLiteral\n0" ]
  x0x8d2ba0 [ label="catk::syntax::IntTag\ni32" ]
  x0x8d2de0 [ label="catk::syntax::AssignStmt\nb = 1i32;" ]
  x0x8d2de0 -> { x0x8d3380, x0x8d3020 }
  x0x8d3380 [ label="catk::syntax::AssignLeftHand\nb" ]
  x0x8d3380 -> { x0x8d2840 }
  x0x8d2840 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x8d3020 [ label="catk::syntax::IntLiteral\n1i32" ]
  x0x8d3020 -> { x0x8d2e70, x0x8d3140 }
  x0x8d2e70 [ label="catk::syntax::DecIntLiteral\n1" ]
  x0x8d3140 [ label="catk::syntax::IntTag\ni32" ]
  x0x8d28d0 [ label="catk::syntax::AssignStmt\nc = 2i32;" ]
  x0x8d28d0 -> { x0x8d30b0, x0x8d2720 }
  x0x8d30b0 [ label="catk::syntax::AssignLeftHand\nc" ]
  x0x8d30b0 -> { x0x8d2600 }
  x0x8d2600 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x8d2720 [ label="catk::syntax::IntLiteral\n2i32" ]
  x0x8d2720 -> { x0x8d2d50, x0x8d3260 }
  x0x8d2d50 [ label="catk::syntax::DecIntLiteral\n2" ]
  x0x8d3260 [ label="catk::syntax::IntTag\ni32" ]
  x0x8d2570 [ label="catk::syntax::AssignStmt\nr0 = [a,b,c] {\r\n  x = a + b;\r\n  ret x * c;\r\n};" ]
  x0x8d2570 -> { x0x8d2690, x0x8d32f0 }
  x0x8d2690 [ label="catk::syntax::AssignLeftHand\nr0" ]
  x0x8d2690 -> { x0x8d31d0 }
  x0x8d31d0 [ label="tao::pegtl::ascii::identifier\nr0" ]
  x0x8d32f0 [ label="catk::syntax::RetContext\n[a,b,c] {\r\n  x = a + b;\r\n  ret x * c;\r\n}" ]
  x0x8d32f0 -> { x0x8d2a80, x0x12e90a0 }
  x0x8d2a80 [ label="catk::syntax::CaptureList\n[a,b,c]" ]
  x0x8d2a80 -> { x0x12e9ac0, x0x12e92e0, x0x12e8a70 }
  x0x12e9ac0 [ label="catk::syntax::CaptureItem\na" ]
  x0x12e92e0 [ label="catk::syntax::CaptureItem\nb" ]
  x0x12e8a70 [ label="catk::syntax::CaptureItem\nc" ]
  x0x12e90a0 [ label="catk::syntax::ContextStmts\n\r\n  x = a + b;\r\n  ret x * c;\r\n" ]
  x0x12e90a0 -> { x0x12e95b0, x0x12e91c0 }
  x0x12e95b0 [ label="catk::syntax::AssignStmt\nx = a + b;" ]
  x0x12e95b0 -> { x0x12e9400, x0x12e84d0 }
  x0x12e9400 [ label="catk::syntax::AssignLeftHand\nx" ]
  x0x12e9400 -> { x0x12e8b00 }
  x0x12e8b00 [ label="tao::pegtl::ascii::identifier\nx" ]
  x0x12e84d0 [ label="catk::syntax::BinExpr\na + b" ]
  x0x12e84d0 -> { x0x12e8320, x0x12e9d90, x0x12e87a0 }
  x0x12e8320 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12e9d90 [ label="catk::syntax::BinOp\n+" ]
  x0x12e87a0 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12e91c0 [ label="catk::syntax::RetStmt\nret x * c;" ]
  x0x12e91c0 -> { x0x12e8560, x0x12e9640 }
  x0x12e8560 [ label="catk::syntax::RetOp\nret" ]
  x0x12e9640 [ label="catk::syntax::BinExpr\nx * c" ]
  x0x12e9640 -> { x0x12e85f0, x0x12e8290, x0x12e96d0 }
  x0x12e85f0 [ label="tao::pegtl::ascii::identifier\nx" ]
  x0x12e8290 [ label="catk::syntax::BinOp\n*" ]
  x0x12e96d0 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x12e88c0 [ label="catk::syntax::AssignStmt\nr1 = if(a) {\r\n  ret b;\r\n} else [c] {\r\n  ret c;\r\n};" ]
  x0x12e88c0 -> { x0x12e8440, x0x12e9370 }
  x0x12e8440 [ label="catk::syntax::AssignLeftHand\nr1" ]
  x0x12e8440 -> { x0x12e83b0 }
  x0x12e83b0 [ label="tao::pegtl::ascii::identifier\nr1" ]
  x0x12e9370 [ label="catk::syntax::IfExpr\nif(a) {\r\n  ret b;\r\n} else [c] {\r\n  ret c;\r\n}" ]
  x0x12e9370 -> { x0x12e8200, x0x12e9760, x0x12e8680, x0x12e9be0 }
  x0x12e8200 [ label="catk::syntax::IfOp\nif" ]
  x0x12e9760 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12e8680 [ label="catk::syntax::RetContext\n{\r\n  ret b;\r\n}" ]
  x0x12e8680 -> { x0x12e8710 }
  x0x12e8710 [ label="catk::syntax::ContextStmts\n\r\n  ret b;\r\n" ]
  x0x12e8710 -> { x0x12e97f0 }
  x0x12e97f0 [ label="catk::syntax::RetStmt\nret b;" ]
  x0x12e97f0 -> { x0x12e8ef0, x0x12e9010 }
  x0x12e8ef0 [ label="catk::syntax::RetOp\nret" ]
  x0x12e9010 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12e9be0 [ label="catk::syntax::RetContext\n[c] {\r\n  ret c;\r\n}" ]
  x0x12e9be0 -> { x0x12e8b90, x0x12e9130 }
  x0x12e8b90 [ label="catk::syntax::CaptureList\n[c]" ]
  x0x12e8b90 -> { x0x12e8f80 }
  x0x12e8f80 [ label="catk::syntax::CaptureItem\nc" ]
  x0x12e9130 [ label="catk::syntax::ContextStmts\n\r\n  ret c;\r\n" ]
  x0x12e9130 -> { x0x12e9d00 }
  x0x12e9d00 [ label="catk::syntax::RetStmt\nret c;" ]
  x0x12e9d00 -> { x0x12e8c20, x0x12e9250 }
  x0x12e8c20 [ label="catk::syntax::RetOp\nret" ]
  x0x12e9250 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x12e8830 [ label="catk::syntax::AssignStmt\naddmul = fn (a, b) [c] {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n};" ]
  x0x12e8830 -> { x0x12e8950, x0x12e7f30 }
  x0x12e8950 [ label="catk::syntax::AssignLeftHand\naddmul" ]
  x0x12e8950 -> { x0x12e7fc0 }
  x0x12e7fc0 [ label="tao::pegtl::ascii::identifier\naddmul" ]
  x0x12e7f30 [ label="catk::syntax::LambdaLiteral\nfn (a, b) [c] {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n}" ]
  x0x12e7f30 -> { x0x12e8d40, x0x12e9910 }
  x0x12e8d40 [ label="catk::syntax::ParamList\na, b" ]
  x0x12e8d40 -> { x0x12e8dd0, x0x12e9520 }
  x0x12e8dd0 [ label="catk::syntax::Param\na" ]
  x0x12e8dd0 -> { x0x12e9b50 }
  x0x12e9b50 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12e9520 [ label="catk::syntax::Param\nb" ]
  x0x12e9520 -> { x0x12e9880 }
  x0x12e9880 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12e9910 [ label="catk::syntax::RetContext\n[c] {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n}" ]
  x0x12e9910 -> { x0x12e9c70, x0x12e99a0 }
  x0x12e9c70 [ label="catk::syntax::CaptureList\n[c]" ]
  x0x12e9c70 -> { x0x12e9e20 }
  x0x12e9e20 [ label="catk::syntax::CaptureItem\nc" ]
  x0x12e99a0 [ label="catk::syntax::ContextStmts\n\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n" ]
  x0x12e99a0 -> { x0x8d2c30 }
  x0x8d2c30 [ label="catk::syntax::RetStmt\nret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;" ]
  x0x8d2c30 -> { x0x8d27b0, x0x12e8050 }
  x0x8d27b0 [ label="catk::syntax::RetOp\nret" ]
  x0x12e8050 [ label="catk::syntax::IfExpr\nif(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }" ]
  x0x12e8050 -> { x0x12e80e0, x0x8d2960, x0x8d2f00, x0x12ecd30 }
  x0x12e80e0 [ label="catk::syntax::IfOp\nif" ]
  x0x8d2960 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x8d2f00 [ label="catk::syntax::BinExpr\n(a + b) * c" ]
  x0x8d2f00 -> { x0x12ec160, x0x12ec310, x0x12eb500 }
  x0x12ec160 [ label="catk::syntax::BinExpr\na + b" ]
  x0x12ec160 -> { x0x12eb980, x0x12eb110, x0x12ebb30 }
  x0x12eb980 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12eb110 [ label="catk::syntax::BinOp\n+" ]
  x0x12ebb30 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12ec310 [ label="catk::syntax::BinOp\n*" ]
  x0x12eb500 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x12ecd30 [ label="catk::syntax::IfExpr\nif(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }" ]
  x0x12ecd30 -> { x0x12ec820, x0x12ebf20, x0x12ec0d0, x0x12eb6b0 }
  x0x12ec820 [ label="catk::syntax::IfOp\nif" ]
  x0x12ebf20 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12ec0d0 [ label="catk::syntax::RetContext\n{\r\n    ret c + b;\r\n  }" ]
  x0x12ec0d0 -> { x0x12ec1f0 }
  x0x12ec1f0 [ label="catk::syntax::ContextStmts\n\r\n    ret c + b;\r\n  " ]
  x0x12ec1f0 -> { x0x12ebe90 }
  x0x12ebe90 [ label="catk::syntax::RetStmt\nret c + b;" ]
  x0x12ebe90 -> { x0x12ecc10, x0x12eb230 }
  x0x12ecc10 [ label="catk::syntax::RetOp\nret" ]
  x0x12eb230 [ label="catk::syntax::BinExpr\nc + b" ]
  x0x12eb230 -> { x0x12ec9d0, x0x12ec280, x0x12ec430 }
  x0x12ec9d0 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x12ec280 [ label="catk::syntax::BinOp\n+" ]
  x0x12ec430 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12eb6b0 [ label="catk::syntax::RetContext\n{\r\n    ret b;\r\n  }" ]
  x0x12eb6b0 -> { x0x12eb350 }
  x0x12eb350 [ label="catk::syntax::ContextStmts\n\r\n    ret b;\r\n  " ]
  x0x12eb350 -> { x0x12ec040 }
  x0x12ec040 [ label="catk::syntax::RetStmt\nret b;" ]
  x0x12ec040 -> { x0x12eaf60, x0x12eb1a0 }
  x0x12eaf60 [ label="catk::syntax::RetOp\nret" ]
  x0x12eb1a0 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12eba10 [ label="catk::syntax::AssignStmt\naddmul2 = fn (a, b) {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n};" ]
  x0x12eba10 -> { x0x12ec4c0, x0x12ec550 }
  x0x12ec4c0 [ label="catk::syntax::AssignLeftHand\naddmul2" ]
  x0x12ec4c0 -> { x0x12ecca0 }
  x0x12ecca0 [ label="tao::pegtl::ascii::identifier\naddmul2" ]
  x0x12ec550 [ label="catk::syntax::LambdaLiteral\nfn (a, b) {\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n}" ]
  x0x12ec550 -> { x0x12eb590, x0x12ece50 }
  x0x12eb590 [ label="catk::syntax::ParamList\na, b" ]
  x0x12eb590 -> { x0x12eb860, x0x12eb2c0 }
  x0x12eb860 [ label="catk::syntax::Param\na" ]
  x0x12eb860 -> { x0x12ebe00 }
  x0x12ebe00 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12eb2c0 [ label="catk::syntax::Param\nb" ]
  x0x12eb2c0 -> { x0x12ec5e0 }
  x0x12ec5e0 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12ece50 [ label="catk::syntax::RetContext\n{\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n}" ]
  x0x12ece50 -> { x0x12ec670 }
  x0x12ec670 [ label="catk::syntax::ContextStmts\n\r\n  ret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;\r\n" ]
  x0x12ec670 -> { x0x12eaff0 }
  x0x12eaff0 [ label="catk::syntax::RetStmt\nret if(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }\r\n  ;" ]
  x0x12eaff0 -> { x0x12ebaa0, x0x12eb740 }
  x0x12ebaa0 [ label="catk::syntax::RetOp\nret" ]
  x0x12eb740 [ label="catk::syntax::IfExpr\nif(a)\r\n    (a + b) * c \r\n  else if(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }" ]
  x0x12eb740 -> { x0x12eb8f0, x0x12ebc50, x0x12ebbc0, x0x12ebfb0 }
  x0x12eb8f0 [ label="catk::syntax::IfOp\nif" ]
  x0x12ebc50 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12ebbc0 [ label="catk::syntax::BinExpr\n(a + b) * c" ]
  x0x12ebbc0 -> { x0x12eb470, x0x12ebd70, x0x12ec700 }
  x0x12eb470 [ label="catk::syntax::BinExpr\na + b" ]
  x0x12eb470 -> { x0x12e8cb0, x0x12e8e60, x0x12ecb80 }
  x0x12e8cb0 [ label="tao::pegtl::ascii::identifier\na" ]
  x0x12e8e60 [ label="catk::syntax::BinOp\n+" ]
  x0x12ecb80 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12ebd70 [ label="catk::syntax::BinOp\n*" ]
  x0x12ec700 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x12ebfb0 [ label="catk::syntax::IfExpr\nif(b) {\r\n    ret c + b;\r\n  } else {\r\n    ret b;\r\n  }" ]
  x0x12ebfb0 -> { x0x12ec8b0, x0x12e9490, x0x12ecaf0, x0x8d4380 }
  x0x12ec8b0 [ label="catk::syntax::IfOp\nif" ]
  x0x12e9490 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x12ecaf0 [ label="catk::syntax::RetContext\n{\r\n    ret c + b;\r\n  }" ]
  x0x12ecaf0 -> { x0x8d2f90 }
  x0x8d2f90 [ label="catk::syntax::ContextStmts\n\r\n    ret c + b;\r\n  " ]
  x0x8d2f90 -> { x0x12e8170 }
  x0x12e8170 [ label="catk::syntax::RetStmt\nret c + b;" ]
  x0x12e8170 -> { x0x12e89e0, x0x8d2cc0 }
  x0x12e89e0 [ label="catk::syntax::RetOp\nret" ]
  x0x8d2cc0 [ label="catk::syntax::BinExpr\nc + b" ]
  x0x8d2cc0 -> { x0x8d40b0, x0x8d52b0, x0x8d4ec0 }
  x0x8d40b0 [ label="tao::pegtl::ascii::identifier\nc" ]
  x0x8d52b0 [ label="catk::syntax::BinOp\n+" ]
  x0x8d4ec0 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x8d4380 [ label="catk::syntax::RetContext\n{\r\n    ret b;\r\n  }" ]
  x0x8d4380 -> { x0x8d4770 }
  x0x8d4770 [ label="catk::syntax::ContextStmts\n\r\n    ret b;\r\n  " ]
  x0x8d4770 -> { x0x8d4f50 }
  x0x8d4f50 [ label="catk::syntax::RetStmt\nret b;" ]
  x0x8d4f50 -> { x0x8d44a0, x0x8d4fe0 }
  x0x8d44a0 [ label="catk::syntax::RetOp\nret" ]
  x0x8d4fe0 [ label="tao::pegtl::ascii::identifier\nb" ]
  x0x8d49b0 [ label="catk::syntax::RetStmt\nret a;" ]
  x0x8d49b0 -> { x0x8d4ad0, x0x8d5070 }
  x0x8d4ad0 [ label="catk::syntax::RetOp\nret" ]
  x0x8d5070 [ label="tao::pegtl::ascii::identifier\na" ]
}
